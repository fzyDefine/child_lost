C51 COMPILER V9.59.0.0   UART                                                              03/26/2023 16:38:48 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN .\Objects\uart.obj
COMPILER INVOKED BY: D:\keil\keil_mdk\C51\BIN\C51.EXE uart.c LARGE OMF2 OPTIMIZE(8,SPEED) BROWSE DEBUG PRINT(.\Listings\
                    -uart.lst) OBJECT(.\Objects\uart.obj)

line level    source

   1          #include "uart.h"
   2          #include "gps.h"
   3          #include "ATcommand.h"
   4          
   5          char idata gpsRxBuffer[gpsRxBufferLength];
   6          unsigned char RX_Count = 0;
   7          
   8          bit busy;
   9          xdata u8 uart02_buffer[UART_MAX];
  10          u8 uart_index = 0;
  11          
  12          void Clean_Uart02Buffer()
  13          {
  14   1              uart_index = 0;
  15   1              memset(uart02_buffer,0,UART_MAX);
  16   1      }
  17          
  18          
  19          void UART01_Init(void)          //9600bps@11.0592MHz
  20          {
  21   1              SCON = 0x50;            //8位数据,可变波特率
  22   1              AUXR &= 0xBF;           //定时器时钟12T模式
  23   1              AUXR &= 0xFE;           //串口1选择定时器1为波特率发生器
  24   1              TMOD &= 0x0F;           //设置定时器模式
  25   1              TL1 = 0xE8;             //设置定时初始值
  26   1              TH1 = 0xFF;             //设置定时初始值
  27   1              ET1 = 0;                //禁止定时器%d中断
  28   1              TR1 = 1;                //定时器1开始计时
  29   1      
  30   1          ES = 1;
  31   1          EA = 1;     //开启定时器
  32   1      }
  33          
  34          void UART01_SendString(unsigned char *str)                              //发送字符串
  35          {       
  36   1              while(*str !='\0')              
  37   1                      UART01_SendByte(*str++);        
  38   1      
  39   1      }
  40          
  41          void UART01_SendByte(unsigned char c)                           //发送一个字符
  42          { 
  43   1          TI=0;   
  44   1          SBUF=c;   
  45   1          while(TI==0);   
  46   1          TI=0;   
  47   1      }
  48          
  49          
  50          void Uart01_Routine(void) interrupt 4 using 3                   
  51          { 
  52   1              unsigned char temp = 0;
  53   1              char i = 0;
  54   1              
C51 COMPILER V9.59.0.0   UART                                                              03/26/2023 16:38:48 PAGE 2   

  55   1              if(RI == 1)
  56   1              {
  57   2                      RI = 0;
  58   2                      temp = SBUF;
  59   2                      if(temp == '$')
  60   2                      {
  61   3                              RX_Count = 0;   
  62   3                      }
  63   2                              
  64   2                      if(RX_Count <= 5)
  65   2                      {
  66   3                         gpsRxBuffer[RX_Count++] = temp;
  67   3                      }
  68   2                      else if(gpsRxBuffer[0] == '$' &gpsRxBuffer[4] == 'M' && gpsRxBuffer[5] == 'C')                  //确定是否收到"GPRMC/GN
             -RMC"这一帧数据
  69   2                      {
  70   3                              gpsRxBuffer[RX_Count++] = temp;
  71   3                              if(temp == '\n')                                                                           
  72   3                              {
  73   4                                      memset(Save_Data.GPS_Buffer, 0, GPS_Buffer_Length);      //清空
  74   4                                      memcpy(Save_Data.GPS_Buffer, gpsRxBuffer, RX_Count);    //保存数据
  75   4                                      Save_Data.isGetData = true;
  76   4                                      RX_Count = 0;
  77   4                                      memset(gpsRxBuffer, 0, gpsRxBufferLength);      //清空                          
  78   4                              }
  79   3                              
  80   3                              if(RX_Count >= 75)
  81   3                              {
  82   4                                      RX_Count = 75;
  83   4                                      gpsRxBuffer[RX_Count] = '\0';//添加结束符
  84   4                              }                       
  85   3                      }
  86   2              }
  87   1              
  88   1      
  89   1      
  90   1      }
  91          
  92          
  93          
  94          void Uart02_Init()              //9600bps
  95          {
  96   1              S2CON = 0x50;           //8位数据,可变波特率
  97   1              AUXR &= 0xFB;           //定时器时钟12T模式
  98   1              T2L = 0xE8;             //设置定时初始值
  99   1              T2H = 0xFF;             //设置定时初始值
 100   1              AUXR |= 0x10;           //定时器2开始计时
 101   1      
 102   1          IE2 &= 0xFE;   //先对需要设置的位进行清零 1111 1110
 103   1          IE2 |= 0x01;   // | ESPI | ES2 允许UART2中断
 104   1          EA = 1;        //允许总中断
 105   1      
 106   1              P_SW2 &=~ 0X01; //选择 P10RX P11TX
 107   1      }
 108          
 109          /***********发送*********/
 110          void Uart02_SendData(unsigned char dat)
 111          {
 112   1          while (busy); // 等待前面的数据发送完成
 113   1          busy = 1;
 114   1          S2BUF = dat; // 写数据到UART2数据寄存器
 115   1      }
C51 COMPILER V9.59.0.0   UART                                                              03/26/2023 16:38:48 PAGE 3   

 116          
 117          /************发送字符串*******************/
 118          void Uart02_SendString(char *s)
 119          {
 120   1          while (*s) // 检测字符串结束标志
 121   1          {
 122   2              Uart02_SendData(*s++); // 发送当前字符
 123   2          }
 124   1      }
 125          
 126          void Uart02_Routine() interrupt 8 using 2
 127          {
 128   1          unsigned char mydata;
 129   1          if(S2CON & 0x01)          //如果是接收中断
 130   1          {
 131   2              S2CON &= 0xFE;       //接收中断标志位清0  
 132   2              mydata = S2BUF;      //将接收缓冲区的数据保存到mydata变量中
 133   2      
 134   2              if(uart_index>=UART_MAX)
 135   2              {
 136   3                  Clean_Uart02Buffer();
 137   3              }
 138   2              uart02_buffer[uart_index++] = mydata;
 139   2      
 140   2      
 141   2          }
 142   1      
 143   1              if(S2CON & 0x02)          //如果是发送中断
 144   1          {
 145   2              S2CON &= 0xFD;       //发送中断标志清0  
 146   2                      busy = 0;
 147   2          }
 148   1      
 149   1      }
 150          
 151          
 152          
 153          
 154          
 155          
 156          
 157          
 158          
 159          
 160          
 161          
 162          
 163          
 164          
 165          
 166          
 167          
 168          
 169          
 170          
 171          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    490    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     52       8
C51 COMPILER V9.59.0.0   UART                                                              03/26/2023 16:38:48 PAGE 4   

   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =     76    ----
   BIT SIZE         =      1    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
