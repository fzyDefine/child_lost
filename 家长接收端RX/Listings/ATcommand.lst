C51 COMPILER V9.59.0.0   ATCOMMAND                                                         04/11/2023 17:36:45 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE ATCOMMAND
OBJECT MODULE PLACED IN .\Objects\ATcommand.obj
COMPILER INVOKED BY: D:\keil\keil_mdk\C51\BIN\C51.EXE ATcommand.c LARGE OMF2 OPTIMIZE(8,SPEED) BROWSE DEBUG PRINT(.\List
                    -ings\ATcommand.lst) OBJECT(.\Objects\ATcommand.obj)

line level    source

   1          #include "ATcommand.h"
   2          #include "BasicFun.h"
   3          #include "UART.h"
   4          #include "string.h"
   5          #include "LCD1602.h"
   6          
   7          extern xdata u8 uart02_buffer[UART_MAX];
   8          
   9          void Debug_Print()
  10          {
  11   1          static u8 times = 0;
  12   1          u8 i = 0;
  13   1          times++;
  14   1          UART01_SendString("*****print debug*****\r\n");
  15   1          for(i=0;i<UART_MAX;i++)
  16   1          {
  17   2              Uart01_SendData(uart02_buffer[i]);
  18   2          }
  19   1          UART01_SendString("\r\n");
  20   1      }
  21          
  22          
  23          bool Wait_CREG(void)
  24          {
  25   1          u8 k = 0,i = 0;
  26   1          
  27   1              Clean_Uart02Buffer();
  28   1              LCD_Init(); //清除上一轮残留重新显示
  29   1          while(1)                            
  30   1              {
  31   2                      Clean_Uart02Buffer();  //清除串口缓存数组   
  32   2                      Uart02_SendString("AT+CREG?\r\n");//查询模块网络注册状态
  33   2                      Delay(1000);     //等待模块响应数据     
  34   2              
  35   2                      for(i=0; i<32;i++) //显示部分AT指令
  36   2                              LCD_ShowChar(i/16+1,i%16+1,uart02_buffer[i]);   
  37   2      
  38   2              Debug_Print();                          
  39   2                  for(k=0;k<UART_MAX;k++)                             
  40   2              {
  41   3                              if(uart02_buffer[k] == ':')
  42   3                              {       
  43   4                                      if((uart02_buffer[k+4] == '1')||(uart02_buffer[k+4] == '4')) //表明网络注册成功
  44   4                                      {
  45   5                                          return true;
  46   5                                      }
  47   4                              }
  48   3                      }
  49   2      
  50   2              }
  51   1      
  52   1      }
  53          
  54          bool Is_IncStr( u8 *tar_buffer, u8 *inc_str )
C51 COMPILER V9.59.0.0   ATCOMMAND                                                         04/11/2023 17:36:45 PAGE 2   

  55          { 
  56   1          if(strstr(tar_buffer,inc_str)!=NULL)
  57   1                  return true;
  58   1              else
  59   1                  return flase;
  60   1      }
  61          
  62          void Send_ATCommand(u8 *command,u8 *want_reaction,u8 wait_s)
  63          {
  64   1          u8 react = 0,i = 0;
  65   1          LCD_Init();
  66   1          do
  67   1          {
  68   2              Clean_Uart02Buffer();   //清除串口数据缓存数组
  69   2              Uart02_SendString(command); //发送AT指令
  70   2              Uart02_SendString("\r\n"); //发送换行 
  71   2      
  72   2              Delay(wait_s*1000);     //延时等待接收
  73   2              Debug_Print();
  74   2                      for(i=0; i<32;i++) //显示部分AT指令
  75   2                              LCD_ShowChar(i/16+1,i%16+1,uart02_buffer[i]);   
  76   2      
  77   2              react = Is_IncStr(uart02_buffer,want_reaction);
  78   2          } while (!react);
  79   1      }
  80          
  81          void Set_MsgMode(u8 *phone_center)  //填写区号,配置短信模式
  82          {
  83   1          u8 temp_buffer[30] = "";
  84   1          u8 react,i;
  85   1          memset(temp_buffer,0,30);
  86   1          sprintf(temp_buffer,"AT+CSCA=\"+861380%s500\"",phone_center);
  87   1          Send_ATCommand(temp_buffer,"OK",2); 
  88   1      
  89   1          Send_ATCommand("AT+CMGF=1","OK",2); 
  90   1          Send_ATCommand("AT+CSCS=\"GSM\"","OK",2); 
  91   1          // Send_ATCommand("AT+CSMP=17,167,0,241","OK",2); 
  92   1      
  93   1      
  94   1              LCD_Init();
  95   1          do
  96   1          {
  97   2              Clean_Uart02Buffer();   //清除串口数据缓存数组
  98   2              Uart02_SendString("AT+CSMP=17,167,0,241"); //发送AT指令
  99   2              Uart02_SendString("\r\n"); //发送换行 
 100   2      
 101   2              Delay(2*1000);     //延时等待接收
 102   2      
 103   2              for(i=0; i<32 && uart02_buffer[i]!='\0' ;i++) //第二行显示部分响应
 104   2                   LCD_ShowChar(i/16+1,i%16+1,uart02_buffer[i]);
 105   2              Debug_Print();
 106   2              react = Is_IncStr(uart02_buffer,"OK");
 107   2          } while (!react);
 108   1      
 109   1          Clean_Uart02Buffer();   //清除串口数据缓存数组
 110   1      
 111   1      }
 112          
 113          void Send_Msg(u8 *target_phone,u8 *content)
 114          {
 115   1          u8 temp_buffer[30]="";
 116   1          u8 i = 0;
C51 COMPILER V9.59.0.0   ATCOMMAND                                                         04/11/2023 17:36:45 PAGE 3   

 117   1              LCD_Init();
 118   1          memset(temp_buffer,0,30);
 119   1          sprintf(temp_buffer,"AT+CMGS=\"%s\"",target_phone);
 120   1          Send_ATCommand(temp_buffer,">",2);
 121   1          Clean_Uart02Buffer(); 
 122   1          Uart02_SendString(content);
 123   1          Uart02_SendData(0X1A);  //确认发送标志
 124   1          delay_ms(3000);
 125   1      
 126   1              for(i=0; i<32 && uart02_buffer[i]!='\0' ;i++) //第二行显示部分响应
 127   1                       LCD_ShowChar(i/16+1,i%16+1,uart02_buffer[i]);
 128   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    928    ----
   CONSTANT SIZE    =    184    ----
   XDATA SIZE       =      1      89
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
